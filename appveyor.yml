environment:
  PYTHONPATH: lib
  AHK_DOWNLOAD_URL: https://autohotkey.com/download/ahk.zip
  FFMPEG_DOWNLOAD_URL: https://ffmpeg.zeranoe.com/builds/win64/static/ffmpeg-4.0.2-win64-static.zip
  matrix:
    - PYTHON: "C:\\Python37-x64"
install:
  # Install python dependency.
  - "%PYTHON%\\python.exe -m pip install poetry"
  - "%PYTHON%\\python.exe -m poetry install"
  - "%PYTHON%\\python.exe -m pip install -r Documentation/requirements.txt"
  - ps: $env:SPHINXBUILD="$env:PYTHON\Scripts\sphinx-build.exe"
  - mkdir build
  # Download autohotkey
  - ps: Invoke-WebRequest $env:AHK_DOWNLOAD_URL -OutFile build/ahk.zip
  - 7z x build/ahk.zip -obuild/ahk
  - ps: $env:PATH="$env:PATH;$pwd\build\ahk\Compiler"
  # Download ffmpeg
  - ps: Invoke-WebRequest $env:FFMPEG_DOWNLOAD_URL -OutFile build/ffmpeg.zip
  - 7z e build/ffmpeg.zip -ir!*.exe -olib/batchrender/bin
build_script:
  - ps: Get-ChildItem -Include *.ahk lib/batchrender/bin/* | % {ahk2exe /in $_}
  - "%PYTHON%\\python.exec -m poetry run pyinstaller -F main.spec"
  - "Documentation/make.bat html"
after_build:
  - "7z a -tzip -xr!.* -xr0!build build\\NukeBatchRender-%APPVEYOR_REPO_TAG_NAME%-win.zip"
artifacts:
  - path: build\NukeBatchRender-*.zip
    name: Prebuild package
before_deploy:
  - ps: >-
      & poetry run Documentation/get_changelog.py $env:APPVEYOR_REPO_TAG_NAME build/release_note.md;
      ${env:APPVEYOR_RELEASE_DESCRIPTION} = (Get-Content -Encoding utf8 build/release_note.md) -join "`n";
deploy:
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: $(APPVEYOR_REPO_TAG_NAME)
  description: $(APPVEYOR_RELEASE_DESCRIPTION)
  provider: GitHub
  auth_token:
    secure: nsLSikshpVvfyMmNivRtOSZT3xmqO5iD6nOkoXipGnT33lU19R89mfpDXZjAuyjr
  artifact: /.*\.zip/
  draft: false
  prerelease: false
  on:
    branch: master
    appveyor_repo_tag: true
