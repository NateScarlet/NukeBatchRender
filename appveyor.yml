environment:
  PYTHONPATH: lib
  PATH: 'C:\Users\appveyor\.local\bin;%PATH%'
  AHK_DOWNLOAD_URL: https://autohotkey.com/download/ahk.zip
  matrix:
    - PYTHON: "C:\\Python37-x64"
install:
  # Install python dependency.
  - ps: |
      irm https://astral.sh/uv/install.ps1 | iex
      $env:Path = "$env:UserProfile\.local\bin;$env:Path"
  - mkdir build
  # Download autohotkey
  - ps: Invoke-WebRequest $env:AHK_DOWNLOAD_URL -OutFile build/ahk.zip
  - 7z x build/ahk.zip -obuild/ahk
  - ps: $env:PATH="$env:PATH;$pwd\build\ahk\Compiler"
build_script:
  # 替换 uv.lock 中的 pypi.lan 为 pypi.org
  - ps: (Get-Content -Path uv.lock -Raw) -replace 'http://pypi.lan', 'https://pypi.org' | Set-Content -Path uv.lock
  - ps: Get-ChildItem -Include *.ahk lib/batchrender/bin/* | % {ahk2exe /in $_}
  - "uv run python -m PyInstaller -F main.spec"
  - "uv run Documentation/make.bat html"
after_build:
  - "7z a -tzip -xr!.* -xr0!build build\\NukeBatchRender-%APPVEYOR_REPO_TAG_NAME%-win.zip"
artifacts:
  - path: build\NukeBatchRender-*.zip
    name: Prebuild package
before_deploy:
  - ps: >-
      & uv run Documentation/get_changelog.py $env:APPVEYOR_REPO_TAG_NAME build/release_note.md;
      ${env:APPVEYOR_RELEASE_DESCRIPTION} = (Get-Content -Encoding utf8 build/release_note.md) -join "`n";
deploy:
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: $(APPVEYOR_REPO_TAG_NAME)
  description: $(APPVEYOR_RELEASE_DESCRIPTION)
  provider: GitHub
  auth_token:
    secure: hi0ghUYGauwot0N5cB4BfgX8zN/ONbURJG/ULR2aneg18jDNCbQqUeXCJ6m4olDM
  artifact: /.*\.zip/
  draft: false
  prerelease: false
  on:
    branch: /v.+/
    appveyor_repo_tag: true
